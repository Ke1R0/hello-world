Hello World!

Set your name:
  $ git config --global user.name "<Your Name>"

Now set your email:
  $ git config --global user.email "<youremail@example.com>"

Get your project url
  $ git config --get remote.origin.url

To create a new Git instance for a project:
  $ git init
git status

$ git add readme.txt

Finally, commit those changes to the repository's history with a short description of the updates.

$ git commit -m "<your commit message>"
$ git config --global user.username <USerNamE>

Connect your Local to your Remote
Now you've got an empty repository started on GitHub.com. At the top you'll see 'Quick Setup', make sure the 'HTTP' button is selected and copy the address — this is the location (address) of your repository on GitHub's servers.
Back in your terminal, and inside of the 'hello-world' folder that you initialized as a Git repository in the earlier challenge, you want to tell Git the location of the remote version on GitHub's servers. You can have multiple remotes so each requires a name. For your main one, this is commonly named origin.
  $ git remote add origin <URLFROMGITHUB>

Connect your Local to your Remote
Now you've got an empty repository started on GitHub.com. At the top you'll see 'Quick Setup', make sure the 'HTTP' button is selected and copy the address — this is the location (address) of your repository on GitHub's servers.
Back in your terminal, and inside of the 'hello-world' folder that you initialized as a Git repository in the earlier challenge, you want to tell Git the location of the remote version on GitHub's servers. You can have multiple remotes so each requires a name. For your main one, this is commonly named origin.
  $ git remote add origin <URLFROMGITHUB>

Switches branch
  $ git checkout readme-edits

List branches
  $ git branch
  $ git branch -a //list local and remote branches
  $ git branch -r //list only remote branches